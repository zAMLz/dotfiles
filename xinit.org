#+TITLE: xinit
#+AUTHOR: Amlesh Sivanantham (zamlz)
#+ROAM_ALIAS: startx
#+ROAM_TAGS: CONFIG SOFTWARE
#+CREATED: [2021-05-14 Fri 07:54]
#+LAST_MODIFIED: [2021-05-14 Fri 08:16:20]
#+STARTUP: content

* X Window System Initializer

The =xinit= program allows a user to manually start the [[file:xorg.org][Xorg X11 Window System]] without the need of a login manager. However, this also means that we have to manually manage our environments ourselves. We won't directly use =xinit=, but rather =startx= which is a nicer frontend for =xinit= that is bundled alongside it.

* Configuration
** Package Install
:PROPERTIES:
:header-args:emacs-lisp: :tangle ~/.config/emacs/lisp/init-xinit.el :comments both :mkdirp yes
:END:

Install the =xinit= package, but not before setting up [[file:xorg.org][Xorg X11 Window System]].

#+begin_src emacs-lisp
(require 'init-xorg)
(zamlz/system-packages-ensure "xorg-xinit" "startx")
(provide 'init-xinit)
#+end_src

** Xinitrc
:PROPERTIES:
:header-args:shell: :tangle ~/.config/xinitrc :shebang #!/bin/sh :comments both
:END:

#+begin_src shell
. $HOME/org/config/lib/shell/logger
LOGGER=$(get_logger xinitrc)
#+end_src

Some linux distros have predefined scripts in these locations that need to be sourced in order for proper Xorg operation. Source the global defaults and then the local files if any exist.

#+begin_src shell
$LOGGER "Sourcing xinitrc.d files if they exist"
if [ -d /etc/X11/xinit/xinitrc.d ] ; then
    for f in /etc/X11/xinit/xinitrc.d/*.sh ; do
        [ -x "$f" ] && . "$f"
    done
    unset f
fi
#+end_src

This part of the script decides which window manager to start. This is ultimately passed as an argument to =starx=. It is configured from =$1= which must be passed to it. Currently we have options to trigger the [[file:herbstluftwm.org][Herbstluftwm Tiling Window Manager]] and [[file:emacs.org][GNU/Emacs]].

#+begin_src shell
session=${1:-herbstluftwm}
$LOGGER "Starting session: $session"

case $session in
    herbstluftwm)   herbstluftwm;;
    exwm)           emacs -mm --debug-init;;
    ,*)             exec $1;;
esac
#+end_src

** User-Level Configurations
:PROPERTIES:
:header-args:shell: :tangle ~/.config/bin/refresh-xinitrc.sh :shebang #!/bin/sh :comments both
:END:

We create a seperate shell script for invoking the user-level scripts. The reason is seperate is so that other window managers can run them as well when refreshing their configuraiton. *NOTE:* This also means that any window manager that is started, should make a call to this script (=refresh-xinitrc.sh=).

You should also add any system specific configurations here as well (like monitor setups, etc. )

#+begin_src shell
if [ -d $HOME/.config/xinitrc.d ] ; then
    find "$HOME/.config/xinitrc.d" -name "*.sh" | while read -r f; do
        [ -x "$f" ] && . "$f"
    done
    unset f
fi
#+end_src
