#+TITLE: Org-roam
#+ROAM_ALIAS:
#+ROAM_KEY: https://www.orgroam.com/
#+ROAM_TAGS: CONFIG SOFTWARE EMACS
#+AUTHOR: Amlesh Sivanantham (zamlz)
#+CREATED: [2021-03-27 Sat 00:15]
#+LAST_MODIFIED: [2021-05-12 Wed 11:05:09]

#+DOWNLOADED: screenshot @ 2021-03-27 00:26:48
[[file:data/org_roam_logo.png]]

* Org-Roam: A Plain Text Personal Knowledge Management System

Org-roam is a really cool piece of software thats built to emulate the feature of Roam Research using the system provided by [[file:org_mode.org][Org-mode]]. The project aims to implement [[file:../notes/zettelkasten_method.org][Zettelkasten Method]] through software.

* Useful Resources
- [[https://www.orgroam.com/manual.html][Org-roam Official User Manual]]
- [[https://org-roam.discourse.group/][Org-roam Discourse Forum]]
- [[https://hugocisneros.com/notes/][Hugo Cisneros's Personal Notes (PhD Student studying Robotics)]]
- [[https://rgoswami.me/posts/org-note-workflow/][An Orgmode Roam Workflow]]
- [[https://www.youtube.com/watch?v=RvWic15iXjk][Nat Eliason: How to Use Roam to Outline a New Article in Under 20 Minutes]]

* Configuration
:PROPERTIES:
:header-args:emacs-lisp: :tangle ~/.config/emacs/lisp/init-org-roam.el :comments both :mkdirp yes
:END:

** Package Setup

=org-roam= is a useful package for taking notes. While this may not be needed, let's make sure [[file:org_mode.org][Org-mode]] is loaded first.

#+begin_src emacs-lisp
(require 'init-org)
(use-package org-roam
  :ensure t
  :after org
  :hook (after-init . org-roam-mode)
  :bind (:map org-mode-map
         ("M-i" . org-roam-insert)
         ("M-I" . org-roam-insert-immediate))
  :custom
  (org-roam-directory "~/org/")
  (org-roam-dailies-directory "private/journal/")
  (org-roam-file-exclude-regexp "README.org")
  (org-roam-db-udpate-method 'immediate))
#+end_src

** Leader Keybindings

Let's add some commonly used functions into our [[file:general_el.org][General Leader Keybindings Definer]].

#+begin_src emacs-lisp
(zamlz/leader-keys
  ;;:keymaps 'org-roam-mode-map
  "n"  '(:ignore t :which-key "org-roam")
  ;; Standard Roam Operations
  "nl" 'org-roam
  "n/" 'org-roam-find-file
  ;; Graph Operations
  "ng" 'org-roam-graph
  "nb" 'org-roam-db-build-cache
  ;; Dired Quick Access
  "nf" 'org-roam-find-directory
  "nF" 'org-roam-dailies-find-directory
  ;; Journal
  "nj" 'org-roam-dailies-capture-today
  "ny" 'org-roam-dailies-capture-yesterday
  "nd" 'org-roam-dailies-capture-date
  ;; Roam Header Modifiers
  "nt" 'org-roam-tag-add
  "na" 'org-roam-alias-add
  )
#+end_src

** Capture Templates

Capture templates, not much to explain here.

#+begin_src emacs-lisp
(setq org-roam-capture-templates
      `(("d" "default" plain (function org-roam--capture-get-point)
         "\n%?"
         :file-name "notes/${slug}"
         :head ,(concat "#+TITLE: ${title}\n"
                        "#+AUTHOR: %n (%(user-login-name))\n"
                        "#+ROAM_ALIAS:\n"
                        "#+ROAM_TAGS:\n"
                        "#+CREATED: %U\n"
                        "#+LAST_MODIFIED: %U\n")
         :unnarrowed t)
        ("p" "private" plain (function org-roam--capture-get-point)
         "\n%?"
         :file-name "private/${slug}"
         :head ,(concat "#+TITLE: ${title}\n"
                        "#+AUTHOR: %n (%(user-login-name))\n"
                        "#+ROAM_ALIAS:\n"
                        "#+ROAM_TAGS:\n"
                        "#+CREATED: %U\n"
                        "#+LAST_MODIFIED: %U\n")
         :unnarrowed t)
        ("c" "config" plain (function org-roam--capture-get-point)
         "\n%?"
         :file-name "config/${slug}"
         :head ,(concat "#+TITLE: ${title}\n"
                        "#+AUTHOR: %n (%(user-login-name))\n"
                        "#+ROAM_ALIAS:\n"
                        "#+ROAM_TAGS: CONFIG SOFTWARE\n"
                        "#+CREATED: %U\n"
                        "#+LAST_MODIFIED: %U\n")
         :unnarrowed t)
        ("w" "webpages/bookmarks" plain (function org-roam--capture-get-point)
         "\n%?"
         :file-name "bookmarks/${slug}"
         :head ,(concat "#+TITLE: ${title}\n"
                        "#+AUTHOR: %n (%(user-login-name))\n"
                        "#+ROAM_ALIAS:\n"
                        "#+ROAM_TAGS: BOOKMARK\n"
                        "#+ROAM_KEY: %x\n"
                        "#+CREATED: %U\n"
                        "#+LAST_MODIFIED: %U\n")
         :unnarrowed t)
        ("b" "blogpost" plain (function org-roam--capture-get-point)
         "\n%?"
         :file-name "blog/${slug}"
         :head ,(concat "#+TITLE: ${title}\n"
                        "#+AUTHOR: %n (%(user-login-name))\n"
                        "#+ROAM_ALIAS:\n"
                        "#+ROAM_TAGS: BLOGPOST\n"
                        "#+CREATED: %U\n"
                        "#+LAST_MODIFIED: %U\n")
         :unnarrowed t)
        ))
#+end_src

** Daily Notes

My setup for my daily notes. I don't really use this anymore though.

#+begin_src emacs-lisp
(setq org-roam-dailies-capture-templates
      `(("d" "default" entry
         #'org-roam-capture--get-point
         "* %U\n%?"
         :file-name "private/journal/%<%Y-%m-%d>"
         :head ,(concat "#+TITLE: %<[%Y-%m-%d] %B %e, %Y (%A)>\n"
                        "#+AUTHOR: %n (%(user-login-name))\n"
                        "#+ROAM_ALIAS: %<%Y-%m-%d>\n"
                        "#+ROAM_TAGS: JOURNAL\n"
                        "#+CREATED: %U\n"
                        "#+LAST_MODIFIED: %U\n"
                        "\n"))
        ))
#+end_src

** Server

=org-roam-server= provides a useful way to view my notes in a graph like view. I can also open them from this view as well.

#+begin_src emacs-lisp
(use-package org-roam-server
  :if (daemonp)
  :after org-roam
  :custom
  (org-roam-server-host "127.0.0.1")
  (org-roam-server-port 8080
  (org-roam-server-authenticate nil)
  (org-roam-server-export-inline-images t)
  (org-roam-server-serve-files t)
  (org-roam-server-served-file-extensions '("pdf" "mp4" "ogv" "png" "svg"))
  (org-roam-server-network-poll t)
  (org-roam-server-network-arrows t)
  (org-roam-server-network-label-truncate t)
  (org-roam-server-network-label-truncate-length 60)
  (org-roam-server-network-label-wrap-length 20))
  :config (org-roam-server-mode))
#+end_src

** Module Footer

#+begin_src emacs-lisp
(provide 'init-org-roam)
#+end_src
