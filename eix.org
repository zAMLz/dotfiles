#+TITLE: eix
#+AUTHOR: Amlesh Sivanantham (zamlz)
#+ROAM_ALIAS:
#+ROAM_TAGS: CONFIG SOFTWARE
#+CREATED: [2021-04-12 Mon 15:37]
#+LAST_MODIFIED: [2021-04-13 Tue 12:28:30]

eix is a tool for querying ebuild repositories that are pulled in by the [[file:portage.org][Portage Pacakge Manager]]. It's a much better tool than using the inbuild =emerge --search= feature.

* Configuration
** Updating the Package Cache
:PROPERTIES:
:header-args:shell: :tangle ~/.config/portage/repo.postsync.d/eix :mkdirp yes :shebang "#!/usr/bin/env bash" :comments both
:END:

This will udpate the eix cache file. However this sync is done after every repo sync and it can get quite messy, so I've redirected it to =/dev/null= until I can find a better way to run this after all the ebuild repositories are synced. This file is generated inside portage's postsync hooks directory.

#+begin_src shell
if [[ -e /var/cache/eix/portage.eix ]]; then
    cp -a /var/cache/eix/portage.eix /var/cache/eix/previous.eix;
fi

eix-update > /dev/null

if [[ -e /var/cache/eix/previous.eix ]]; then
    eix-diff > /dev/null;
fi
#+end_src

** Generating Caches for Local Repos
:PROPERTIES:
:header-args:shell: :tangle ~/.config/portage/repo.postsync.d/egencache :mkdirp yes :shebang "#!/bin/sh" :comments both
:END:

I use other ebuild repositories as well and they don't come with precomputed caches. So, we'll have to use portage's postsync hooks to build caches for them as well. Otherwise, =eix-udpate= can get pretty slow.

#+begin_src shell
# The repository name.
repository_name=${1}
# The URI to which the repository was synced.
sync_uri=${2}
# The path to the repository.
repository_path=${3}

# Portage assumes that a hook succeeded if it exits with 0 code. If no
# explicit exit is done, the exit code is the exit code of last spawned
# command. Since our script is a bit more complex, we want to control
# the exit code explicitly.
ret=0

if [ -n "${repository_name}" ]; then
        # Repository name was provided, so we're in a post-repository hook.
        #echo "* In post-repository hook for ${repository_name}"
        #echo "** synced from remote repository ${sync_uri}"
        #echo "** synced into ${repository_path}"

        # Gentoo comes with pregenerated cache but the other repositories
        # usually don't. Generate them to improve performance.
        if [ "${repository_name}" != "gentoo" ]; then
                if ! egencache --update --repo="${repository_name}" --jobs=$(nproc)
                then
                        echo "!!! egencache failed!"
                        ret=1
                fi
        fi
fi


# Return explicit status.
exit "${ret}"
#+end_src
