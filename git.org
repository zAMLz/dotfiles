#+TITLE: Git
#+AUTHOR: Amlesh Sivanantham (zamlz)
#+ROAM_ALIAS:
#+ROAM_TAGS: SOFTWARE CONFIG EMACS
#+ROAM_KEY: https://git-scm.com/
#+CREATED: [2021-03-27 Sat 09:36]
#+LAST_MODIFIED: [2021-05-08 Sat 19:10:30]

* Git: The Stupod Content Tracker

#+begin_quote
No, really, look at the =man= page, thats the full title!
#+end_quote

#+DOWNLOADED: screenshot @ 2021-04-07 17:26:44
[[file:data/2021-04-07_17-26-44_screenshot.png]]


/[[https://xkcd.com/1296/][Git Commit - Randall Munroe]]/

* Useful Resources
- [[https://git-scm.com/doc][Official Git Documentation]]
- [[https://protesilaos.com/codelog/2021-01-26-git-diff-hunk-elisp-org/][Informative Diff Hunks for Emacs Lisp ad Org]]
- [[https://youtu.be/j-k-lkilbEs][John Wiegley's Magit Demonstration]]

* Tips and Tricks
Nothing yet, but as I remember them, I'll add them here.

* Configuration
** Global Config
:PROPERTIES:
:header-args:conf: :tangle ~/.config/git/config :comments both :mkdirp yes
:END:
*** User Profile

#+begin_src conf
[user]
    signingkey = 0x882C395C3B28902C
    name = Amlesh Sivanantham (zamlz)
    email = zamlz@pm.me
#+end_src

*** Core

Specify the global ignore and attributes path

#+begin_src conf
[core]
    pager = less
    excludesfile = ~/.config/git/ignore
    attributesfile = ~/.config/git/attributes
#+end_src

*** Commit Settings

#+begin_src conf
[commit]
    gpgsign = true
#+end_src

*** Diff Settings

#+begin_src conf
[diff "gpg"]
    textconv = gpg --no-tty --decrypt
#+end_src

Protesilaos Stravrou has an excellent blog post on how to improve the diff view of [[file:../notes/emacs_lisp.org][Elisp]] and [[file:org_mode.org][Org-mode]]. This is done by specifying the =xfuncname= regex which is used to identify which heading/function the change belongs to. Full blog post is under the [[*Useful Resources]] section.

#+begin_src conf
[diff "lisp"]
    xfuncname = "^(\\(.*)$"
[diff "org"]
    xfuncname = "^(\\*+ +.*)$"
#+end_src

*** Pull Settings

#+begin_src conf
[pull]
    ff = only
#+end_src

*** GnuPG

#+begin_src conf
[gpg]
    program = gpg
#+end_src

*** Aliases

These are just useful aliases I've found online

#+begin_src conf
[alias]
    branches = for-each-ref --sort=-committerdate --format=\"%(color:blue)%(authordate:relative)\t%(color:red)%(authorname)\t%(color:white)%(color:bold)%(refname:short)\" refs/remotes
    root = rev-parse --show-toplevel
    lol = log --graph --decorate --pretty=oneline --abbrev-commit
    lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
#+end_src

** Excludes File
:PROPERTIES:
:header-args:conf: :tangle ~/.config/git/ignore :comments both :mkdirp yes
:END:

Many programs generate a bunch of garbage files. We don't want git to consider these files. It's often a pain as well to continuously copy =.gitignore= files around so instead we maintain a global gitignore that is used for all git repos. This is primarily for ignoring files that *ONLY* my system would generate (i.e. Emacs being the main culprit). There may be some repos where I /do/ want these files checked in and that case we can just =--force= it.

/Emacs garbage:/

#+begin_src conf
# autosave/backup/compiled files
,*~
\#*\#
,*.elc

# Directory Configuration
.dir-locals.el
#+end_src

/Python Garbage:/

#+begin_src conf
.venv/
__pycache__/
*.pyc
#+end_src

** Attributes File
:PROPERTIES:
:header-args:conf: :tangle ~/.config/git/attributes :comments both :mkdirp yes
:END:

Attributes let us assign file types to specific behaviours within git. In this case, we want these files types to use a special diff settings that we've defined for it in the global configuraiton. /(Note, there is a comma there which shouldn't exist but its there because we need to escape the character for org-mode/)

#+begin_src conf
,*.lisp  diff=lisp
,*.el    diff=lisp
,*.org   diff=org
#+end_src

* Emacs Configuration
:PROPERTIES:
:header-args:emacs-lisp: :tangle ~/.config/emacs/lisp/init-git.el :comments both :mkdirp yes
:END:
** Diff HL Mode

[[https://github.com/dgutov/diff-hl][github:dgutov/diff-hl]] highlights uncommited changes on the left side of text buffers.

#+begin_src emacs-lisp
(use-package diff-hl
  :init (global-diff-hl-mode 1))
#+end_src

** Git Time Machine

Need to configure this more

#+begin_src emacs-lisp
(use-package git-timemachine)
#+end_src

** Git Modes

These are grouped together as you don't need to configure it, but it adds modes for git related files so they won't be =Fundamental=.

#+begin_src emacs-lisp
(use-package gitconfig-mode)
(use-package gitignore-mode)
(use-package gitattributes-mode)
#+end_src

** Package Provider

#+begin_src emacs-lisp
(provide 'init-git)
#+end_src
