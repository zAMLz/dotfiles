#+TITLE: PlantUML
#+AUTHOR: Amlesh Sivanantham (zamlz)
#+ROAM_ALIAS: plantuml-mode
#+ROAM_TAGS: CONFIG SOFTWARE
#+CREATED: [2021-05-17 Mon 10:06]
#+LAST_MODIFIED: [2021-05-17 Mon 16:05:46]
#+STARTUP: content

* UML Diagrams Made Easy

=PlantUML= a simple program that can help us very easily build UML diagrams. Even other types of diagrams are supported. Below is an example of what is possible.

#+begin_src plantuml :file ./data/plantuml_test.png :exports results
@startuml
'hide footbox
skinparam backgroundcolor transparent
skinparam monochrome reverse

participant "Bob on\nseveral lines" as Bob
actor Alice

Bob -> Alice : hello
note right of Alice
  this is a note
end note

Alice -> Bob : Is it ok\nwith a message that is\non several lines?

note right
  This other note
  should work
  on several lines
end note

== This is a separation ==

Bob -> Last : Yes it works!
Last -> Last : working in progress
note left : this is\nanother note

Last --> Last : working in progress

Last --> Bob : done

opt dummy comment
  Bob -> Last : Error\nOn\nSeveral\nLine
  Last --> Bob : None
else
  Last --> Bob : None
  Last -> Bob : None
else other
  Last -> Bob : None
  note over Alice, Last
    This is a long note
    over Alice and Last
  end note
  Last -> Bob : None
  Last -> Bob : None
end
@enduml
#+end_src

#+RESULTS:
[[file:./data/plantuml_test.png]]

* Configuration
:PROPERTIES:
:header-args:emacs-lisp: :tangle ~/.config/emacs/lisp/init-plantuml.el :comments both :mkdirp yes
:END:
** System Package

Make sure to install the system package for =plantuml=, otherwise, we won't be able to interface with it.

#+begin_src emacs-lisp
(zamlz/system-packages-ensure "plantuml")
#+end_src

** Major Mode

This sets up a major-mode for =plantuml= in [[file:emacs.org][GNU/Emacs]]. You can directly edit uml files now

#+begin_src emacs-lisp
(use-package plantuml-mode)
#+end_src

We need to configure the execution mode for =plantuml-mode= as well.

#+begin_src emacs-lisp
(setq plantuml-default-exec-mode 'executable)
(setq org-plantuml-exec-mode 'plantuml)
#+end_src

Let's also set the output type to =txt= so we get nice ASCII art

#+begin_src emacs-lisp
(setq plantuml-output-type "svg")
#+end_src

** Feature Provide

#+begin_src emacs-lisp
(provide 'init-plantuml)
#+end_src
