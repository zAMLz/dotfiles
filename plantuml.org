#+TITLE: PlantUML
#+AUTHOR: Amlesh Sivanantham (zamlz)
#+ROAM_ALIAS: plantuml-mode
#+ROAM_TAGS: CONFIG SOFTWARE
#+CREATED: [2021-05-17 Mon 10:06]
#+LAST_MODIFIED: [2021-05-17 Mon 11:32:55]
#+STARTUP: content

* UML Diagrams Made Easy

=PlantUML= a simple program that can help us very easily build UML diagrams. Even other types of diagrams are supported. Below is an example of what is possible.

#+begin_src plantuml
title Sample State Diagram
scale 600 width

[*] -> State1
State1 --> State2 : Succeeded
State1 --> [*] : Aborted
State2 --> State3 : Succeeded
State2 --> [*] : Aborted
state State3 {
  state "Accumulate Enough Data\nLong State Name" as long1
  long1 : Just a test
  [*] --> long1
  long1 --> long1 : New Data
  long1 --> ProcessData : Enough Data
}
State3 --> State3 : Failed
State3 --> [*] : Succeeded / Save Result
State3 --> [*] : Aborted
#+end_src

* Configuration
:PROPERTIES:
:header-args:emacs-lisp: :tangle ~/.config/emacs/lisp/init-plantuml.el :comments both :mkdirp yes
:END:

** System Package

Make sure to install the system package for =plantuml=, otherwise, we won't be able to interface with it.

#+begin_src emacs-lisp
(zamlz/system-packages-ensure "plantuml")
#+end_src

** Major Mode

This sets up a major-mode for =plantuml= in [[file:emacs.org][GNU/Emacs]]. You can directly edit uml files now

#+begin_src emacs-lisp
(use-package plantuml-mode)
#+end_src

We need to configure the execution mode for =plantuml-mode= as well.

#+begin_src emacs-lisp
(setq plantuml-default-exec-mode 'executable)
(setq org-plantuml-exec-mode 'plantuml)
#+end_src

Let's also set the output type to =txt= so we get nice ASCII art

#+begin_src emacs-lisp
(setq plantuml-output-type "svg")
#+end_src
