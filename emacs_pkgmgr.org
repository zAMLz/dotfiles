#+TITLE: Emacs Package Manager
#+AUTHOR: Amlesh Sivanantham (zamlz)
#+ROAM_ALIAS:
#+ROAM_TAGS: CONFIG SOFTWARE
#+CREATED: [2021-04-16 Fri 22:06]
#+LAST_MODIFIED: [2021-04-17 Sat 07:50:32]

This page just pertains to package management within [[file:emacs.org][GNU/Emacs]]. We make use of =use-package= as our primary package manager.

* Configuration
:PROPERTIES:
:header-args:emacs-lisp: :tangle ~/.config/emacs/lisp/init-package.el :comments both :mkdirp yes
:END:

** Configure the Package Archive

=package= is the built in package manager for emacs though its very limited in its features. We want to use =use-package= so we'll use =package-install= to install it if it doesn't exist.

#+begin_src emacs-lisp
(require 'package)
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/"))
(add-to-list 'package-archives '("org"   . "https://orgmode.org/elpa/"))
(add-to-list 'package-archives '("gnu"   . "https://elpa.gnu.org/packages/"))
(setq package-enable-at-startup nil)
(package-initialize)
#+end_src

** Setup use-package

Installs =use-package= if it doesn't already exist.

#+begin_src emacs-lisp
(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))
(eval-and-compile
  (setq use-package-always-ensure t)
  (setq use-package-verbose t))
#+end_src

** Auto Package Updater

Always update packages daily! This is a rolling release system after all. It's better to get small update periodically than to get a bunch at once. We also should make sure that we
are prompted for updating the packages in a child frame if we are running in a daemon.

#+begin_src emacs-lisp
(use-package auto-package-update
  :custom
  (auto-package-update-interval 1)
  (auto-package-update-prompt-before-update t)
  (auto-package-update-hide-results t)
  :config
  (if (daemonp)
      (add-hook 'after-make-frame-functions
                (lambda (frame)
                  (with-selected-frame frame
                    (auto-package-update-maybe))))
    (auto-package-update-maybe)))
#+end_src

** Paradox

Use =paradox-list-packages= to get a better interface.

#+begin_src emacs-lisp
(use-package paradox
  :init (paradox-enable))
#+end_src

** Package Provides

#+begin_src emacs-lisp
(provide 'init-package)
#+end_src
