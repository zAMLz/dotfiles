
"        _
" __   _(_)_ __ ___  _ __ ___
" \ \ / / | '_ ` _ \| '__/ __|
"  \ V /| | | | | | | | | (__
"   \_/ |_|_| |_| |_|_|  \___|

"------------------------------------------------------------------------------
" Load Vim Plugins (VimPlug)
"------------------------------------------------------------------------------

call plug#begin('~/.vim/plugged')

" vim-airline:
" Lean & mean status/tabline for vim thats light as air
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'morhetz/gruvbox'

Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'

Plug 'chrisbra/csv.vim'
Plug 'godlygeek/tabular'
Plug 'plasticboy/vim-markdown'

" Plug 'valloric/youcompleteme'
Plug 'yggdroot/indentline'
Plug 'mbbill/undotree'

" Language Based Plugins
Plug 'JuliaEditorSupport/julia-vim'
Plug 'ledger/vim-ledger'
Plug 'vim-scripts/gnuplot.vim'

call plug#end()

"------------------------------------------------------------------------------
" Configure loaded plugins
"------------------------------------------------------------------------------

" vim-airline
let laststatus = 2
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1

" vim-airline-themes
let g:airline_theme = 'base16_gruvbox_dark_hard'

" git-gutter
nmap <C-M-j> <Plug>GitGutterNextHunk
nmap <C-M-k> <Plug>GitGutterPrevHunk
let g:gitgutter_set_sign_backgrounds = 1

" YouCompleteMe stuff
" let g:ycm_global_ycm_extra_conf = '~/etc/vim/ycm_extra_conf.py'

" Indent Lines
"let g:indentLine_char = '.'
let g:indentLine_char_list = ['|', '¦', '┆', '┊']
let g:indentLine_setColors = 1
"let g:indentLine_bgcolor_term = 0
let g:indentLine_color_term = 0

" Configure vim ledger
let g:ledger_maxwidth = 80
let g:ledger_bin = 'ledger'
let g:ledger_extra_options = '--pedantic --explicit'
let g:ledger_align_at = 77
let g:ledger_date_format = '%Y-%m-%d'

" Markdown conceal
let g:vim_markdown_conceal = 0
let g:vim_markdown_conceal_code_blocks = 0

"------------------------------------------------------------------------------
" Other various useful settings
"------------------------------------------------------------------------------

set number          " Show Line numbers
set ruler           " Show line and column number of the cursor
set cursorline      " highlight current line
set cursorcolumn    " Create a column for where the cursor is
set colorcolumn=80  " Create a column to show where 80 chars are
set modeline        " Allow source files to configure vim as well

" TAB = 4 SPACES
set tabstop=4		" number of visual spaces per TAB
set softtabstop=4 	" number of space in TAB while editing
set expandtab		" TABs are now SPACEs
set shiftwidth=4    " Allows helps to make it 4 spaces in neovim

filetype plugin on
filetype indent on  " Load filetype-specific indent files
syntax on

set wildmenu        " visual autocomplete for command menu
set lazyredraw      " redraw only when we need to

set showmatch       " highlight matching brackets [{()}]
set incsearch       " search as characters are entered
set hlsearch        " highlight matches

set noshowmode      " Stop showing the default mode

set mouse=a         " Set mouse wheel to scroll

" Enable Code Folding
set foldenable
set foldlevelstart=10
set foldnestmax=10
set foldmethod=indent    " fold based on ident level

" Custom file search
set path+=**

"------------------------------------------------------------------------------
" Vim colorschemes
"------------------------------------------------------------------------------

" Use peachpuff built-in colorscheme as the base
colorscheme peachpuff

" Color of the Columns
highlight ColorColumn ctermbg=black
highlight CursorColumn ctermbg=black

" Change the default coloring of line numbers
highlight LineNr ctermfg=black

" Change colorscheme of Pmenus
highlight Pmenu ctermfg=darkgrey ctermbg=black

" Set background color of folded blocks
highlight Folded ctermbg=black

" Some syntax highlighting changes (maybe move this to its own file)
highlight Function ctermfg=darkblue
highlight String ctermfg=darkgreen
highlight Comment ctermfg=darkgrey
highlight Exception ctermfg=darkred

" Fix colors on gitgutter after colorscheme has been set
highlight SignColumn ctermbg=None
highlight GitGutterAdd ctermbg=None ctermfg=green
highlight GitGutterChange ctermbg=None ctermfg=yellow
highlight GitGutterDelete ctermbg=None ctermfg=red

"------------------------------------------------------------------------------
" Custom Keybindings
"------------------------------------------------------------------------------

" Sets a keybind to turn off highlighted searches
nnoremap <leader><space> :nohlsearch<CR>

" Keybinds to quickly switch buffers
noremap <S-j> :bn<CR>
noremap <S-k> :bp<CR>

" Key binds to toggle the Undo Tree
noremap <F5> :UndotreeToggle<CR>

" Ledger remap tab completion
au FileType ledger inoremap <silent> <Tab> <C-r>=ledger#autocomplete_and_align()<CR>
au FileType ledger vnoremap <silent> <Tab> :LedgerAlign<CR>
au FileType ledger nnoremap <silent> <C-m> :silent<space>make<bar>redraw!<bar>cwindow<CR>

"------------------------------------------------------------------------------
" Custom Vim Functions
"------------------------------------------------------------------------------

" Trim the whitespace present in a file
fun! TrimWhitespace()
    let l:save = winsaveview()
    keeppatterns %s/\s\+$//e
    call winrestview(l:save)
endfun
command! TrimWhitespace call TrimWhitespace()

" vim:ft=vim
