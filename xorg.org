#+TITLE: Xorg X11 Window System
#+AUTHOR: Amlesh Sivanantham (zamlz)
#+ROAM_ALIAS:
#+ROAM_TAGS: CONFIG SOFTWARE
#+ROAM_KEY: https://www.x.org/wiki/
#+CREATED: [2021-03-29 Mon 19:39]
#+LAST_MODIFIED: [2021-03-31 Wed 18:52:18]

#+DOWNLOADED: screenshot @ 2021-03-29 19:46:34
[[file:data/xorg_logo.png]]

Xorg is an open source implementation of the X window system.

* Configuration
** Xinitrc
:PROPERTIES:
:header-args:shell: :tangle ~/.xinitrc :shebang #!/bin/sh
:END:

#+begin_src shell
. $HOME/org/config/lib/shell/logger
LOGGER=$(get_logger xinitrc)
#+end_src

Some linux distros have predefined scripts in these locations that need to be sourced in order for proper Xorg operation. Source the global defaults and then the local files if any exist.

#+begin_src shell
# We need to source some things if it exists
$LOGGER "Sourcing xinitrc.d files if they exist"
if [ -d /etc/X11/xinit/xinitrc.d ] ; then
    for f in /etc/X11/xinit/xinitrc.d/*.sh ; do
        [ -x "$f" ] && . "$f"
    done
    unset f
fi

# Repeat for any local scripts if they exist
# Store xrandr monitor setup scripts here!!!
if [ -d $HOME/.config/xinitrc.d ] ; then
    find "$HOME/.config/xinitrc.d" -name "*.sh" | while read -r f; do
        [ -x "$f" ] && . "$f"
    done
    unset f
fi
#+end_src

This part of the script decides which window manager to start. This is ultimately passed as an argument to startx. Take a look at =~/.zlogin= to see how it is triggered.

#+begin_src shell
# Start Window Manager
session=${1:-herbstluftwm}
$LOGGER "Starting session: $session"

EXEC_DBUS="exec dbus-launch --exit-with-session"

case $session in
    herbstluftwm)   $EXEC_DBUS herbstluftwm;;
    exwm)           $EXEC_DBUS emacs -mm --debug-init;;
    *)              exec $1;;
esac
#+end_src

** Window Manager Utilties Startup Script
:PROPERTIES:
:header-args:shell: :tangle ~/.config/wm_init.sh :mkdirp yes :shebang #!/bin/sh
:END:

This is the main script outside of the actual window mangaer which is triggered by xorg. The purpose of this is to put other programs that need to be started alongside the window manager to create a fully fledged desktop environment. Typically, I've seen these components be in the =~/.xinitrc= file but we don't really want to restart xorg if we want to run some of the initialization code. The other option is to put it in the init file for the window manager, but that would also mean that we have to copy the same code to other init files. Instead its better for it to just have a unified source.

Secondaly, these codeblocks aren't actually tangled anywhere directly. We use =org-babel='s no-web feature which lets us insert code blocks into other code blocks. For example, we insert it into the *herbstluftwm* autostart config.

Like with all other components in my system, setup a logger for debugging purposes.

#+begin_src shell
# We may already have a logger ready to use...
if [ -z "$LOGGER" ]; then
    . $HOME/org/config/lib/shell/logger
    LOGGER=$(get_logger xorg.wminit)
fi
$LOGGER "Initializing window manager common utilities"
#+end_src

Start compton if a config file exists. Looks crisp as hell!

#+begin_src shell
pkill -x compton
if [ -f "$HOME/.config/compton.conf" ]; then
    $LOGGER "Starting Compton"
    compton &
fi
#+end_src

Make sure xrdb loads up the xresouces file

#+begin_src shell
# Reload the xresource data
xrdb -I$HOME $HOME/.Xresources
#+end_src

I had =xst= terminal installed as it was a lightweight alternative to urxvt. If I ever do continue using it, make sure it gets the config reset switch. *NOTE:* this wil fail if the colorscheme isn't properly set!

#+begin_src shell
# Refresh the terminal
pkill -USR1 xst
#+end_src

If I was still using =rxvt-unicode='s daemon, this would be uncommented...

#+begin_src shell
# if [ -z "$(pgrep urxvtd)" ]; then
#     urxvtd -q -o -f
# fi
#+end_src

*Very Important!* Make sure we start the emacs daemon here! But do not start it if it's already running.

#+begin_src shell
if [ -z "$(pgrep -f 'emacs --daemon=xorg-emacs-daemon')"]; then
    emacs --daemon=xorg-emacs-daemon
fi
#+end_src

Set the background for the desktop environment. If =~/.fehbg= doesn't exist, setup the bitmap wallpaper.

#+begin_src shell
# Set the background
if [ -f "$HOME/.fehbg" ]; then
    $HOME/.fehbg
else
    . $HOME/org/config/lib/shell/xrdb_colors
    xsetroot -bitmap ~/org/config/lib/bitmaps/tile.xbm -fg $XCOLOR0 -bg $XBACKGROUND
fi
#+end_src

I use =sxhkd= for keybindings that should exist in all my environments regardless of what window manager I'm using.

#+begin_src shell
# Initialize universal keybindings
SXHKD_SHELL=sh
export SXHKD_TERMINAL=$HOME/org/config/bin/emacsclient-launcher
pkill -x sxhkd
sxhkd &
#+end_src

The single most important thing! Make the *CAPS LOCK* key into the *ESCAPE* key!

#+begin_src shell
setxkbmap -option caps:escape
#+end_src

We need to configure various xorg settings here. This might not be the best place as this definetly feels like something that should belong in the =~/.xinitrc=, however, in case they are set to something other than the defaults, it makes sense to be able to reset them here.

#+begin_src shell
# Use Display Power Management Settings to configure various things.
# + Disable screen blanking (screensaver) (I don't think this works)
xset s off

# + Increases the speed of the keyboard repeat rate
xset r rate 400 50

# Rehash local fonts
xset +fp $HOME/.local/share/fonts
xset fp rehash
#+end_src

Finally start lemonbar once everything else is setup.

#+begin_src shell
# Start lemonbar after all X related stuff is finished
pkill -x lemonbar
$HOME/.config/lemonbar/lemonbar &
#+end_src

** Xresources
:PROPERTIES:
:header-args:C: :tangle ~/.Xresources
:END:
*** Source Colorscheme

#+begin_src C
#include ".config/xcolor/scheme"
#+end_src

*** Xft Font Settings

#+begin_src C
Xft.dpi:                    96
Xft.antialias:              true
Xft.rgba:                   rgb
Xft.hinting:                true
Xft.hintstyle:              hintslight
#+end_src

*** Default Font Face

#+begin_src C
!*font: xft:Iosevka Term:size=11
!*font: xft:xos4 Terminus:size=12
#define system_font xft:xos4 Terminus:size=12
#+end_src

*** Rxvt Unicode Terminal
**** General Settings

#+begin_src C
URxvt.depth:                32
URxvt.geometry:             96x33
URxvt.loginShell:           false
URxvt.internalBorder:       10
URxvt.lineSpace:            0
!URxvt.termName:             xterm-256color
#+end_src

**** Transparency

I've disabled all transparency for the time being

#+begin_src C
! fake transparency - true or false (default)
!URxvt*transparent: true

! Real transparency (needs compositor like compton)
! If using make sure to disable the background below.
!URxvt*depth: 32
!URxvt*background: [85]xbackground
#+end_src

**** Misc UI Changes

#+begin_src C
! tint with any color; i.e., blue, red, tomato4, olivedrab2, etc.
!   some nice listings are at:
!     http://www.nisrv.com/drupal/?q=node/11
!     http://www.htmlgoodies.com/tutorials/colors/article.php/3478921
!URxvt*tintColor: S_base03

! shading - 0 to 99 darkens, 101 to 200 lightens.
!   Dont use with tintColor; just use a darker or lighter color instead.
URxvt*shading: 15

URxvt*saveLines: 12000

! scrollbar - true (default) or false
URxvt*scrollBar: false

! scrollbar position - left=false (default) or right=true
URxvt*scrollBar_right: false

! scrollbar style - rxvt (default), plain, next, or xterm
URxvt*scrollstyle: plain
#+end_src

**** Clipboard Keybindings

#+begin_src C
! Remap the copy and paste functionaility
URxvt.keysym.Shift-Control-V: eval:paste_clipboard
URxvt.keysym.Shift-Control-C: eval:selection_to_clipboard
#+end_src

**** Colorscheme and Font

#+begin_src C
URxvt.foreground: xforeground
URxvt.background: xbackground
URxvt.cursorColor: xcursorColor

! This is for fading windows if not active
URxvt.fading: xfade
URxvt.fadeColor: xbackground

URxvt.color0:  xcolor0
URxvt.color1:  xcolor1
URxvt.color2:  xcolor2
URxvt.color3:  xcolor3
URxvt.color4:  xcolor4
URxvt.color5:  xcolor5
URxvt.color6:  xcolor6
URxvt.color7:  xcolor7
URxvt.color8:  xcolor8
URxvt.color9:  xcolor9
URxvt.color10: xcolor10
URxvt.color11: xcolor11
URxvt.color12: xcolor12
URxvt.color13: xcolor13
URxvt.color14: xcolor14
URxvt.color15: xcolor15

URxvt.font: system_font
#+end_src

*** Rofi Dmenu
**** Enabled Modes

#+begin_src C
! "Enabled modi" Set from: Default
rofi.modi:                           window,run,ssh
#+end_src

**** Window Geometry

#+begin_src C
! "Window width" Set from: Default
 rofi.width:                          30

! "Number of lines" Set from: Default
 rofi.lines:                          15

! "Number of columns" Set from: Default
! rofi.columns:                        1
#+end_src

**** Colorscheme and Font

#+begin_src C
! "Font to use" Set from: XResources
rofi.font:                            Iosevka Term 12

! Color Guidlines                       BG -  FG - BG_ALT - HL_BG - HL_FG
! "Color scheme for normal row"
 rofi.color-normal:                     xbackground, xforeground, xbackground, xcolor0, xforeground
! "Color scheme for urgent row"
 rofi.color-urgent:                     xbackground, xforeground, xbackground, xcolor0, xforeground
! "Color scheme for active row"
 rofi.color-active:                     xbackground, xforeground, xbackground, xcolor0, xforeground

! Color Guidlines                       BG          BORDER      SEPEARATOR
! "Color scheme window"
 rofi.color-window:                     xbackground,    xcolor8,    xcolor8
! "Border width" Set from: XResources
rofi.bw:                             4
#+end_src

**** Unused Rofi Settings

#+begin_src C
! "Location on screen" Set from: Default
! rofi.location:                       0
! "Padding" Set from: Default
! rofi.padding:                        5
! "Y-offset relative to location" Set from: Default
! rofi.yoffset:                        0
! "X-offset relative to location" Set from: Default
! rofi.xoffset:                        0
! "Always show number of lines" Set from: Default
! rofi.fixed-num-lines:                true

! "Terminal to use" Set from: XResources
rofi.terminal:                       urxvtc
! "Ssh client to use" Set from: Default
! rofi.ssh-client:                     ssh
! "Ssh command to execute" Set from: Default
! rofi.ssh-command:                    {terminal} -e {ssh-client} {host}
! "Run command to execute" Set from: Default
! rofi.run-command:                    {cmd}
! "Command to get extra run targets" Set from: Default
! rofi.run-list-command:
! "Run command to execute that runs in shell" Set from: Default
! rofi.run-shell-command:              {terminal} -e {cmd}
! "Command executed on accep-entry-custom for window modus" Set from: Default
! rofi.window-command:                 xkill -id {window}

! "Disable history in run/ssh" Set from: Default
! rofi.disable-history:                false
! "Use levenshtein sorting" Set from: Default
! rofi.levenshtein-sort:               false
! "Set case-sensitivity" Set from: Default
! rofi.case-sensitive:                 false

! "Cycle through the results list" Set from: Default
! rofi.cycle:                          true
! "Enable sidebar-mode" Set from: Default
! rofi.sidebar-mode:                   false
! "Row height (in chars)" Set from: Default
! rofi.eh:                             1
! "Enable auto select mode" Set from: Default
! rofi.auto-select:                    false

! "Parse hosts file for ssh mode" Set from: Default
! rofi.parse-hosts:                    false
! "Parse known_hosts file for ssh mode" Set from: Default
! rofi.parse-known-hosts:              true

! "Set the modi to combine in combi mode" Set from: Default
! rofi.combi-modi:                     window,run
! "Set the matching algorithm. (normal, regex, glob, fuzzy)" Set from: Default
! rofi.matching:                       normal
! "Tokenize input string" Set from: Default
! rofi.tokenize:                       true
! "Monitor id to show on" Set from: Default
! rofi.m:                              -5

! "Margin between rows" Set from: Default
! rofi.line-margin:                    2
! "Padding within rows" Set from: Default
! rofi.line-padding:                   1
! "Pre-set filter" Set from: Default
! rofi.filter:
! "Separator style (none, dash, solid)" Set from: Default
! rofi.separator-style:                dash
! "Hide scroll-bar" Set from: Default
! rofi.hide-scrollbar:                 false
! "Fullscreen" Set from: Default
! rofi.fullscreen:                     false
! "Fake transparency" Set from: Default
! rofi.fake-transparency:              false
! "DPI" Set from: Default
! rofi.dpi:                            -1

! "Threads to use for string matching" Set from: Default
! rofi.threads:                        0

! "Scrollbar width" Set from: Default
! rofi.scrollbar-width:                8
! "Scrolling method. (0: Page, 1: Centered)" Set from: Default
! rofi.scroll-method:                  0

! "Background to use for fake transparency. (background or screenshot)" Set from: Default
! rofi.fake-background:                screenshot
! "Window Format. w (desktop name), t (title), n (name), r (role), c (class)" Set from: Default
! rofi.window-format:                  {w}   {c}   {t}
! "Click outside the window to exit" Set from: Default
! rofi.click-to-exit:                  true

! "Indicate how it match by underlining it." Set from: Default
! rofi.show-match:                     true
! "Pidfile location" Set from: Default
! rofi.pid:                            /home/zamlz/.cache/rofi.pid

! "Paste primary selection" Set from: Default
! rofi.kb-primary-paste:               Control+V,Shift+Insert
! "Paste clipboard" Set from: Default
! rofi.kb-secondary-paste:             Control+v,Insert
! "Clear input line" Set from: Default
! rofi.kb-clear-line:                  Control+w
! "Beginning of line" Set from: Default
! rofi.kb-move-front:                  Control+a
! "End of line" Set from: Default
! rofi.kb-move-end:                    Control+e
! "Move back one word" Set from: Default
! rofi.kb-move-word-back:              Alt+b
! "Move forward one word" Set from: Default
! rofi.kb-move-word-forward:           Alt+f
! "Move back one char" Set from: Default
! rofi.kb-move-char-back:              Left,Control+b
! "Move forward one char" Set from: Default
! rofi.kb-move-char-forward:           Right,Control+f
! "Delete previous word" Set from: Default
! rofi.kb-remove-word-back:            Control+Alt+h,Control+BackSpace
! "Delete next word" Set from: Default
! rofi.kb-remove-word-forward:         Control+Alt+d
! "Delete next char" Set from: Default
! rofi.kb-remove-char-forward:         Delete,Control+d
! "Delete previous char" Set from: Default
! rofi.kb-remove-char-back:            BackSpace,Control+h
! "Delete till the end of line" Set from: Default
! rofi.kb-remove-to-eol:               Control+k
! "Delete till the start of line" Set from: Default
! rofi.kb-remove-to-sol:               Control+u
! "Accept entry" Set from: Default
! rofi.kb-accept-entry:                Control+j,Control+m,Return,KP_Enter
! "Use entered text as command (in ssh/run modi)" Set from: Default
! rofi.kb-accept-custom:               Control+Return
! "Use alternate accept command." Set from: Default
! rofi.kb-accept-alt:                  Shift+Return
! "Delete entry from history" Set from: Default
! rofi.kb-delete-entry:                Shift+Delete
! "Switch to the next mode." Set from: Default
! rofi.kb-mode-next:                   Shift+Right,Control+Tab
! "Switch to the previous mode." Set from: Default
! rofi.kb-mode-previous:               Shift+Left,Control+Shift+Tab
! "Go to the previous column" Set from: Default
! rofi.kb-row-left:                    Control+Page_Up
! "Go to the next column" Set from: Default
! rofi.kb-row-right:                   Control+Page_Down
! "Select previous entry" Set from: Default
! rofi.kb-row-up:                      Up,Control+p,Shift+Tab,Shift+ISO_Left_Tab
! "Select next entry" Set from: Default
! rofi.kb-row-down:                    Down,Control+n
! "Go to next row, if one left, accept it, if no left next mode." Set from: Default
! rofi.kb-row-tab:                     Tab
! "Go to the previous page" Set from: Default
! rofi.kb-page-prev:                   Page_Up
! "Go to the next page" Set from: Default
! rofi.kb-page-next:                   Page_Down
! "Go to the first entry" Set from: Default
! rofi.kb-row-first:                   Home,KP_Home
! "Go to the last entry" Set from: Default
! rofi.kb-row-last:                    End,KP_End
! "Set selected item as input text" Set from: Default
! rofi.kb-row-select:                  Control+space
! "Take a screenshot of the rofi window" Set from: Default
! rofi.kb-screenshot:                  Alt+S
! "Toggle case sensitivity" Set from: Default
! rofi.kb-toggle-case-sensitivity:     grave,dead_grave
! "Toggle sort" Set from: Default
! rofi.kb-toggle-sort:                 Alt+grave
! "Quit rofi" Set from: Default
! rofi.kb-cancel:                      Escape,Control+g,Control+bracketleft
! "Custom keybinding 1" Set from: Default
! rofi.kb-custom-1:                    Alt+1
! "Custom keybinding 2" Set from: Default
! rofi.kb-custom-2:                    Alt+2
! "Custom keybinding 3" Set from: Default
! rofi.kb-custom-3:                    Alt+3
! "Custom keybinding 4" Set from: Default
! rofi.kb-custom-4:                    Alt+4
! "Custom Keybinding 5" Set from: Default
! rofi.kb-custom-5:                    Alt+5
! "Custom keybinding 6" Set from: Default
! rofi.kb-custom-6:                    Alt+6
! "Custom Keybinding 7" Set from: Default
! rofi.kb-custom-7:                    Alt+7
! "Custom keybinding 8" Set from: Default
! rofi.kb-custom-8:                    Alt+8
! "Custom keybinding 9" Set from: Default
! rofi.kb-custom-9:                    Alt+9
! "Custom keybinding 10" Set from: Default
! rofi.kb-custom-10:                   Alt+0
! "Custom keybinding 11" Set from: Default
! rofi.kb-custom-11:                   Alt+exclam
! "Custom keybinding 12" Set from: Default
! rofi.kb-custom-12:                   Alt+at
! "Csutom keybinding 13" Set from: Default
! rofi.kb-custom-13:                   Alt+numbersign
! "Custom keybinding 14" Set from: Default
! rofi.kb-custom-14:                   Alt+dollar
! "Custom keybinding 15" Set from: Default
! rofi.kb-custom-15:                   Alt+percent
! "Custom keybinding 16" Set from: Default
! rofi.kb-custom-16:                   Alt+dead_circumflex
! "Custom keybinding 17" Set from: Default
! rofi.kb-custom-17:                   Alt+ampersand
! "Custom keybinding 18" Set from: Default
! rofi.kb-custom-18:                   Alt+asterisk
! "Custom Keybinding 19" Set from: Default
! rofi.kb-custom-19:                   Alt+parenleft

! "The display name of this browser" Set from: Default
! rofi.display-ssh:
! "The display name of this browser" Set from: Default
! rofi.display-run:
! "The display name of this browser" Set from: Default
! rofi.display-drun:
! "The display name of this browser" Set from: Default
! rofi.display-combi:
#+end_src

*** Emacs

Really we set the default colorscheme here so that emacs doesn't blind our eyes we the default black background, but also set some other sane defaults from the default colorscheme so that if emacs does in fact crash, we are in a /dark theme/ environment.

#+begin_src C
Emacs.foreground: xforeground
Emacs.background: xbackground

Emacs.color0:  xcolor0
Emacs.color1:  xcolor1
Emacs.color2:  xcolor2
Emacs.color3:  xcolor3
Emacs.color4:  xcolor4
Emacs.color5:  xcolor5
Emacs.color6:  xcolor6
Emacs.color7:  xcolor7
Emacs.color8:  xcolor8
Emacs.color9:  xcolor9
Emacs.color10: xcolor10
Emacs.color11: xcolor11
Emacs.color12: xcolor12
Emacs.color13: xcolor13
Emacs.color14: xcolor14
Emacs.color15: xcolor15
#+end_src
