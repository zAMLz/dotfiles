#+TITLE: Xorg X11 Window System
#+AUTHOR: Amlesh Sivanantham (zamlz)
#+ROAM_ALIAS: X11
#+ROAM_TAGS: CONFIG SOFTWARE
#+ROAM_KEY: https://www.x.org/wiki/
#+CREATED: [2021-03-29 Mon 19:39]
#+LAST_MODIFIED: [2021-04-01 Thu 14:17:10]

#+DOWNLOADED: screenshot @ 2021-03-29 19:46:34
[[file:data/xorg_logo.png]]

Xorg is an open source implementation of the X window system.

* Configuration
** Xinitrc
:PROPERTIES:
:header-args:shell: :tangle ~/.xinitrc :shebang #!/bin/sh :comments both
:END:

#+begin_src shell
. $HOME/org/config/lib/shell/logger
LOGGER=$(get_logger xinitrc)
#+end_src

Some linux distros have predefined scripts in these locations that need to be sourced in order for proper Xorg operation. Source the global defaults and then the local files if any exist.

#+begin_src shell
$LOGGER "Sourcing xinitrc.d files if they exist"
if [ -d /etc/X11/xinit/xinitrc.d ] ; then
    for f in /etc/X11/xinit/xinitrc.d/*.sh ; do
        [ -x "$f" ] && . "$f"
    done
    unset f
fi
#+end_src

Repeat for any local scripts if they exist. /Store xrandr monitor setup scripts here!!!/

#+begin_src shell
if [ -d $HOME/.config/xinitrc.d ] ; then
    find "$HOME/.config/xinitrc.d" -name "*.sh" | while read -r f; do
        [ -x "$f" ] && . "$f"
    done
    unset f
fi
#+end_src

This part of the script decides which window manager to start. This is ultimately passed as an argument to startx. Take a look at =~/.zlogin= to see how it is done.

#+begin_src shell
session=${1:-herbstluftwm}
$LOGGER "Starting session: $session"

EXEC_DBUS="exec dbus-launch --exit-with-session"

case $session in
    herbstluftwm)   $EXEC_DBUS herbstluftwm;;
    exwm)           $EXEC_DBUS emacs -mm --debug-init;;
    *)              exec $1;;
esac
#+end_src

** Window Manager Utilties Startup Script
:PROPERTIES:
:header-args:shell: :tangle ~/.config/wm_init.sh :mkdirp yes :shebang #!/bin/sh :comments both
:END:

This is the main script outside of the actual window mangaer which is triggered by xorg. The purpose of this is to put other programs that need to be started alongside the window manager to create a fully fledged desktop environment. Typically, I've seen these components be in the =~/.xinitrc= file but we don't really want to restart xorg if we want to run some of the initialization code. The other option is to put it in the init file for the window manager, but that would also mean that we have to copy the same code to other init files. Instead its better for it to just have a unified file for these things that all my window managers can source.

#+begin_src shell
. $HOME/org/config/lib/shell/logger
LOGGER=$(get_logger xorg.wminit)
$LOGGER "Initializing window manager common utilities"
#+end_src

Start compton if a config file exists. /Looks crisp as hell!/

#+begin_src shell
pkill -x compton
if [ -f "$HOME/.config/compton.conf" ]; then
    $LOGGER "Starting Compton"
    compton &
fi
#+end_src

Make sure xrdb loads up the xresouces file

#+begin_src shell
xrdb -I$HOME $HOME/.Xresources
#+end_src

I had =xst= terminal installed as it was a lightweight alternative to urxvt. If I ever do continue using it, make sure it gets the config reset switch. *NOTE:* this wil fail if the colorscheme isn't properly set!

#+begin_src shell
pkill -USR1 xst
#+end_src

If I was still using =rxvt-unicode='s daemon, this would be uncommented...

#+begin_src shell
# if [ -z "$(pgrep urxvtd)" ]; then
#     urxvtd -q -o -f
# fi
#+end_src

*Very Important!* Make sure we start the emacs daemon here! But do not start it if it's already running.

#+begin_src shell
if [ -z "$(pgrep -f 'emacs --daemon=xorg-emacs-daemon')"]; then
    emacs --daemon=xorg-emacs-daemon
fi
#+end_src

Set the background for the desktop environment. If =~/.fehbg= doesn't exist, setup the bitmap wallpaper.

#+begin_src shell
if [ -f "$HOME/.fehbg" ]; then
    $HOME/.fehbg
else
    . $HOME/org/config/lib/shell/xrdb_colors
    xsetroot -bitmap ~/org/config/lib/bitmaps/tile.xbm -fg $XCOLOR0 -bg $XBACKGROUND
fi
#+end_src

I use =sxhkd= for keybindings that should exist in all my environments regardless of what window manager I'm using.

#+begin_src shell
SXHKD_SHELL=sh
export SXHKD_TERMINAL=$HOME/org/config/bin/emacsclient-launcher
pkill -x sxhkd
sxhkd &
#+end_src

The single most important thing! Make the *CAPS LOCK* key into the *ESCAPE* key!

#+begin_src shell
setxkbmap -option caps:escape
#+end_src

We need to configure various xorg settings here. This might not be the best place as this definetly feels like something that should belong in the =~/.xinitrc=, however, in case they are set to something other than the defaults, it makes sense to be able to reset them here.

Turn off the screen saver.

#+begin_src shell
xset s off
#+end_src

Increases the typing speed of the keyboard by increasing the repeat rate.

#+begin_src shell
xset r rate 400 50
#+end_src

Rehash locally installed fonts

#+begin_src shell
xset +fp $HOME/.local/share/fonts
xset fp rehash
#+end_src

Finally start lemonbar once everything else is setup.

#+begin_src shell
pkill -x lemonbar
$HOME/.config/lemonbar/lemonbar &
#+end_src

** Xresources
:PROPERTIES:
:header-args:C: :tangle ~/.Xresources
:END:
*** Source Colorscheme

#+begin_src C
#include ".config/xcolor/scheme"
#+end_src

*** Xft Font Settings

#+begin_src C
Xft.dpi:                    96
Xft.antialias:              true
Xft.rgba:                   rgb
Xft.hinting:                true
Xft.hintstyle:              hintslight
#+end_src

*** Default Font Face

#+begin_src C
!*font: xft:Iosevka Term:size=11
!*font: xft:xos4 Terminus:size=12
#define system_font xft:xos4 Terminus:size=12
#+end_src

*** External Configurations

We need to source the xresources of [[file:urxvt.org][URxvt Terminal Emulator]], [[file:rofi.org][Rofi Dmenu]], and [[file:emacs.org][GNU/Emacs]].

#+begin_src C
#include ".Xresources.d/urxvt"
#include ".Xresources.d/rofi"
#include ".Xresources.d/emacs"
#+end_src
